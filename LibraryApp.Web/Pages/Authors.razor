@page "/Authors"
@layout MainLayout
@inject IJSRuntime js
@inject HttpClient Http
@inject NavigationManager navigationaManager
@using LibraryApp.DTOs


@if (Alert)
{
    <div class="modal fade show" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModalLabel" style="padding-right: 16px; display: block;" aria-modal="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content border-width-0 border-t-4 brc-warning-m2 px-3">

                <div class="modal-header py-2">
                    <i class="bgc-white fas fa-exclamation-circle mb-n4 mx-auto fa-3x text-orange-m2"></i>
                </div>

                <div class="modal-body text-center">

                    Author Name:
                    <p class="text-secondary-m2 text-105">
                        <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="authorDto.Name">
                    </p>

                </div>
                @if (AddedSuccess)
                {
                    <div class="alert d-flex bgc-yellow-l4 brc-success-m2 border-1 border-l-4 pl-3" role="alert">
                        <i class="fa fa-check mr-3 text-180 text-success-m2"></i>
                        <span class="align-self-center text-success-d2 text-120">Author added successfuly</span>
                    </div>
                }
                @if (AlertError)
                {
                    <div class="alert bgc-grey-l4 border-none border-l-4 brc-danger-tp1 radius-0">
                        <h4 class="text-danger-m1 text-130">author name already exists</h4>
                        Check it out!
                    </div>
                }

                <div class="modal-footer bg-white justify-content-between px-0 py-3">
                    <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-warning btn-a-light-danger" data-dismiss="modal" @onclick="CloseWindow">
                        <i class="fas fa-undo-alt mr-1 text-danger-m2"></i>
                        Close
                    </button>

                    <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-success btn-a-light-success" data-dismiss="modal" @onclick="NewAuthor">
                        Save
                        <i class="fa fa-arrow-right ml-1 text-success-m2"></i>
                    </button>
                </div>

            </div>
        </div>
    </div>
}



<div class="position-center">
    <div class="col-12 col-sm-6 mt-3 mt-sm-5 cards-container" id="card-container-2">
        <div class="card bgc-grey-m1 brc-primary radius-0" style="height:700px; width:900px" id="card-2">
            <div class="card-header">
                <h5 class="card-title text-white font-light"><i class="fa fa-table mr-2px"></i>Authors</h5>
                
                    <button type="button" class="btn btn-sm btn-success my-1" data-toggle="modal" data-target="#warningModal" @onclick="AddNewAuthor">
                        ADD AUTHOR
                    </button>

            </div>

            <div class="card-body p-0 bg-white">
                <table class="table table-striped table-hover mb-0">
                    <thead class="thin-border-bottom">
                        <tr>
                            <th><i class="fa fa-user text-blue"></i> User</th>
                            <th><i class="fas fa-at text-brown-m2 text-90"></i></th>
                            <th class="d-none d-lg-table-cell"></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in author)
                        {
                            <tr>
                                <td class="text-dark-m2">@item.Name</td>
                                <td>
                                    <button class="btn btn-md btn-danger" @onclick="(()=>DeleteAuthor(item.ID))">Del</button>
                                </td>

                            </tr>
                        }


                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@code {

    bool AddedSuccess = false;
    bool Alert = false;
    bool AlertError = false;
    List<AuthorDto> author = new List<AuthorDto>();
    AuthorDto authorDto = new AuthorDto();
    AuthorDto authorResponse = new AuthorDto();
    protected async override Task OnInitializedAsync()
    {

        await GetAuthors();

    }
    public async Task GetAuthors()
    {
        var Listauthor = await Http.GetFromJsonAsync<ApiResponseDto<List<AuthorDto>>>("Author/GetAuthor");
        if (Listauthor.IsSucces)
        {
            author = Listauthor.Data;
        }
    }

    public async Task NewAuthor()
    {

        if (authorDto.Name != null)
        {
            var Author = await Http.PostAsJsonAsync<AuthorDto>("Author/CreateAuthor", authorDto);
            var AuthorStr = await Author.Content.ReadFromJsonAsync<ApiResponseDto<AuthorDto>>();
            if (AuthorStr.IsNotSucces) //yazar var ise
            {
                AlertError = true;
            }
            else
            {
                AddedSuccess = true;
                navigationaManager.NavigateTo("/Authors");
            }

        }
    }
    void AddNewAuthor()
    {
        Alert = true;
    }


    public async Task DeleteAuthor(int ID)
    {
        var response = await Http.DeleteAsync("Author/DeleteAuthor/" + ID);
        if (response.IsSuccessStatusCode)
        {
            navigationaManager.NavigateTo("/Authors");
        }

    }
    void CloseWindow()
    {
        Alert = false;
        AddedSuccess = false;
    }
}
