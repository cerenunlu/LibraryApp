@page "/BookList"
@inject IJSRuntime js
@inject HttpClient Http
@inject NavigationManager navigationaManager
@using LibraryApp.DTOs

<div class="mt-5">
    <button type="button" class="btn btn-md btn-outline-success my-1" data-toggle="modal" data-target="#warningModal" @onclick="AddNewBook">
        ADD BOOK
    </button>

</div>

<div class="row">

    @if (Alert)
    {
        <div class="modal fade show" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModalLabel" style="padding-right: 16px; display: block;" aria-modal="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content border-width-0 border-t-4 brc-warning-m2 px-3">

                    <div class="modal-header py-2">
                        <i class="bgc-white fas fa-exclamation-circle mb-n4 mx-auto fa-3x text-orange-m2"></i>
                    </div>

                    <div class="modal-body text-center">
                        Book Name:
                        <p class="text-warning-d1 text-130 mt-3">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="book.Name">
                        </p>
                        Author Name:
                        <p class="text-secondary-m2 text-105">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="authorDto.Name">
                        </p>
                        Published Year:
                        <p class="text-secondary-m2 text-105">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="book.PublishedYear">
                        </p>
                        Cover:
                        <p class="text-secondary-m2 text-105">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="book.Cover">
                        </p>
                    </div>
                    @if (AddedSuccess)
                    {
                        <div class="alert d-flex bgc-yellow-l4 brc-success-m2 border-1 border-l-4 pl-3" role="alert">
                            <i class="fa fa-check mr-3 text-180 text-success-m2"></i>
                            <span class="align-self-center text-success-d2 text-120">Book added successfuly</span>
                        </div>
                    }

                    <div class="modal-footer bg-white justify-content-between px-0 py-3">
                        <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-warning btn-a-light-danger" data-dismiss="modal" @onclick="CloseWindow">
                            <i class="fas fa-undo-alt mr-1 text-danger-m2"></i>
                            Close
                        </button>

                        <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-success btn-a-light-success" data-dismiss="modal" @onclick="NewBook">
                            Save
                            <i class="fa fa-arrow-right ml-1 text-success-m2"></i>
                        </button>
                    </div>

                </div>
            </div>
        </div>
    }

    @if (books != null)
    {
        foreach (var item in books)
        {
            <div class="col-4 col-sm-4 mt-3 mt-sm-0 cards-container" id="card-container-4">
                <div class="card mt-15" id="card-4">
                    <div class="card-header bgc-info-tp2 card-header-lg">
                        <p>
                            <button type="button" class="btn btn-md btn-info my-1" @onclick="(()=>EditBook(item.ID))" data-toggle="modal" data-target="#modalFullscreen">
                                Edit
                            </button>

                            <button type="button" class="btn btn-md btn-outline-success my-1" data-toggle="modal" data-target="#warningModal" @onclick="(()=>DeleteBook(item.ID))">
                                Del
                            </button>
                            @*<button class="btn btn-sm btn-danger" @onclick="(() =>DeleteBook(item.ID))"><i class="fa fa-times">Del</i></button>*@
                        </p>
                        <h5 class="card-title text-130">
                            @item.BookName
                        </h5>

                        <div class="card-toolbar">
                            <button href="#" data-action="settings" class="card-toolbar-btn text-success-m1 border-none" @onclick="(() => AddtoMyLib(item.ID))"><i class="fa fa-plus"></i>Add to my Library</button>

                        </div>
                    </div><!-- /.card-header -->

                    <div class="card-body bgc-info-tp2 p-0">
                        <div class="p-3">
                            <p class="alert alert-info mb-1">
                                <div class="row">
                                    <div class="row-cols-sm-1">
                                        <img src="@item.Cover" style="height:150px; width:120px;" />
                                    </div>
                                    <div class="row-cols-sm-2 ml-3">
                                        Published Year:  @item.PublishedYear <br />
                                        Author :  @item.AuthorName
                                    </div>


                                </div>
                            </p>
                        </div>
                    </div><!-- /.card-body -->
                </div>
            </div>

            if (EditBookModal)
            {
                <div class="modal fade modal-fs show" id="modalFullscreen" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" style="padding-right: 16px; display: block;" aria-modal="true">
                    <div class="modal-dialog modal-dialog-scrollable" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">×</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="col-6 col-sm-6 mt-3 mt-sm-0 cards-container" id="card-container-4">
                                    <div class="card" id="card-4" style="width:200px;" draggable="false">
                                        <div class="card-header card-header-sm">
                                            Book Name:
                                            <p class="text-secondary-m2 text-105">
                                                <input type="text" class="form-control form-control-lg pr-4 shadow-none" placeholder="@item.BookName" id="id-login-username" autocomplete="off" @bind-value="updateBook.BookName">
                                            </p>

                                        </div><!-- /.card-header -->

                                        <div class="card-body bg-white p-0">
                                            <div class="p-3">
                                                Author Name:
                                                <p class="text-secondary-m2 text-105">
                                                    <input type="text" class="form-control form-control-lg pr-4 shadow-none" placeholder="@item.AuthorName" id="id-login-username" autocomplete="off" @bind-value="updateBook.AuthorName">
                                                </p>
                                                Published Year:
                                                <p class="text-secondary-m2 text-105">
                                                    <input type="text" class="form-control form-control-lg pr-4 shadow-none" placeholder="@item.PublishedYear" id="id-login-username" autocomplete="off" @bind-value="updateBook.PublishedYear">
                                                </p>
                                               
                                            </div>
                                        </div><!-- /.card-body -->
                                        <footer class="row">
                                            <button class="btn btn-sm btn-success ml-15" @onclick="(()=>UpdateBookInfo(item.ID))">Save</button>
                                            <button class="btn btn-sm btn-warning ml-25" @onclick="CloseEditModal">Cancel</button>
                                        </footer>

                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary">Save changes</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }

    }

    @if (ALertDeleteSuccess)
    {
        <div class="modal fade show" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModalLabel" style="padding-right: 16px; display: block;" aria-modal="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content border-width-0 border-t-4 brc-warning-m2 px-3">

                    <div class="modal-header py-2">
                        <i class="bgc-white fas fa-exclamation-circle mb-n4 mx-auto fa-3x text-orange-m2"></i>
                    </div>

                    <div class="modal-body text-center">
                        Book Name:
                        <p class="text-warning-d1 text-130 mt-3">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="book.Name">
                        </p>
                        Author Name:
                        <p class="text-secondary-m2 text-105">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="authorDto.Name">
                        </p>
                        Published Year:
                        <p class="text-secondary-m2 text-105">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="book.PublishedYear">
                        </p>
                        Cover:
                        <p class="text-secondary-m2 text-105">
                            <input type="text" class="form-control form-control-lg pr-4 shadow-none" id="id-login-username" autocomplete="off" @bind-value="book.Cover">
                        </p>
                    </div>
                    @if (AddedSuccess)
                    {
                        <div class="alert d-flex bgc-yellow-l4 brc-success-m2 border-1 border-l-4 pl-3" role="alert">
                            <i class="fa fa-check mr-3 text-180 text-success-m2"></i>
                            <span class="align-self-center text-success-d2 text-120">Book added successfuly</span>
                        </div>
                    }

                    <div class="modal-footer bg-white justify-content-between px-0 py-3">
                        <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-warning btn-a-light-danger" data-dismiss="modal" @onclick="CloseWindow">
                            <i class="fas fa-undo-alt mr-1 text-danger-m2"></i>
                            Close
                        </button>

                        <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-success btn-a-light-success" data-dismiss="modal" @onclick="NewBook">
                            Save
                            <i class="fa fa-arrow-right ml-1 text-success-m2"></i>
                        </button>
                    </div>

                </div>
            </div>
        </div>
    }
    @if (ALertDeleteSuccess)
    {
        <div class="modal fade show" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModalLabel" style="padding-right: 16px; display: block;" aria-modal="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content border-width-0 border-t-4 brc-warning-m2 px-3">

                    <div class="modal-header py-2">
                        <i class="bgc-white fas fa-exclamation-circle mb-n4 mx-auto fa-3x text-orange-m2"></i>
                    </div>

                    <div class="modal-body text-center">
                        <h5>Deleted Success</h5>
                    </div>

                    <div class="modal-footer bg-white justify-content-between px-0 py-3">
                        <button type="button" class="btn btn-md px-2 px-md-4 btn-light-secondary btn-h-light-warning btn-a-light-danger" data-dismiss="modal" @onclick="CloseWindow">
                            <i class="fas fa-undo-alt mr-1 text-danger-m2"></i>
                            Close
                        </button>
                       
                    </div>
                  
                </div>
            </div>
        </div>
    }
</div>


@code {
    bool Alert = false;
    bool AddedSuccess = false;
    bool ALertDeleteSuccess = false;
    bool EditBookModal = false;
    List<BookAuthorDto> books = new List<BookAuthorDto>();
    List<AuthorDto> authors = new List<AuthorDto>();
    public List<string> StringList = new List<string>();
    BookDto book = new BookDto();
    List<AuthorDto> author = new List<AuthorDto>();
    AuthorDto authorDto = new AuthorDto();
    AuthorDto authorResponse = new AuthorDto();
    int BookID;
    BookAuthorDto updateBook = new BookAuthorDto();

    protected async override Task OnInitializedAsync()
    {

        await GetBooks();
        await GetAuthors();

    }

    public async Task GetBooks()
    {

        var getBook = await Http.GetFromJsonAsync<ApiResponseDto<List<BookAuthorDto>>>("Book/GetBook");


        if (getBook.IsSucces)
        {
            books = getBook.Data;
        }


        //var getstring = await Http.GetFromJsonAsync<List<string>>("Book");

        //StringList = getstring;

    }
    //public async Task SelectedBook( int ID)
    //{
    //    var selectedBook = await Http.GetFromJsonAsync<ApiResponseDto<BookDto>>("Book/GetBookByID");
    //}
    public async Task GetAuthors()
    {
        var Listauthor = await Http.GetFromJsonAsync<ApiResponseDto<List<AuthorDto>>>("Author/GetAuthor");
        if (Listauthor.IsSucces)
        {
            author = Listauthor.Data;
        }
    }
    public async Task AddtoMyLib(int ID)
    {

    }

    void AddNewBook()
    {
        Alert = true;

    }
    void CloseWindow()
    {
        Alert = false;
        AddedSuccess = false;
    }

    public async Task NewBook()
    {
        if (book != null & authorDto.Name != null)
        {
            var Author = await Http.PostAsJsonAsync<AuthorDto>("Author/CreateAuthor", authorDto);
            var AuthorStr = await Author.Content.ReadFromJsonAsync<ApiResponseDto<AuthorDto>>();
            if (AuthorStr.IsNotSucces) //yazar var ise
            {
                authorResponse = AuthorStr.Data;
                book.FK_AuthorID = authorResponse.ID;
                var NewBook = await Http.PostAsJsonAsync<BookDto>("Book/NewBook", book);
                if (NewBook != null)
                {
                    AddedSuccess = true;

                }
            }
            else
            {
                authorResponse = AuthorStr.Data;
                book.FK_AuthorID = authorResponse.ID;
                var newBook = await Http.PostAsJsonAsync<BookDto>("Book/newBook", book);
                if (newBook != null)
                {
                    AddedSuccess = true;

                }
            }

        }
    }
    public async Task DeleteBook(int ID)
    {
        var response = await Http.DeleteAsync("Book/DeleteBook/" + ID);
        if (response.IsSuccessStatusCode)
        {
            navigationaManager.NavigateTo("/BookList/");
        }

    }
    public async Task EditBook(int ID)
    {
        BookID = ID;
        EditBookModal = true;

    }
    public async Task UpdateBookInfo(int bookID)
    {
        updateBook.ID = bookID;
        var updateResponse = await Http.PutAsJsonAsync("Book/UpdateBook",updateBook);
        if (updateResponse.IsSuccessStatusCode)
        {
            navigationaManager.NavigateTo("/Home");
        }
    }
    public void CloseEditModal()
    {
        EditBookModal = false;
    }

}
